julia> G = [
       0 10 20 0 0
       0 0 15 0 0
       0 0 0 40 35
       0 25 0 0 40
       0 0 0 0 0
       ]
julia> n=size(G)[1]
julia> b=[2, -2, 0, 0, 0]
julia> shortest_path=Model(HiGHS.Optimizer)
julia> set_silent(shortest_path)
julia> @variable(shortest_path, x[1:n, 1:n], Bin)
julia> #Arc with zero cost are not a part the path as they do no exist
julia> @constraint(shortest_path,[i=1:n, j=1:n; G[i,j]==0], x[i, j]==0)
julia> # Flow conservation constraint
julia> @constraint(shortest_path, [i = 1:n], sum(x[i, :]) - sum(x[:, i]) == b[i],)
julia> @objective(shortest_path, Min, sum(G .* x))
julia> optimize!(shortest_path)
julia> @assert is_solved_and_feasible(shortest_path)
julia> objective_value(shortest_path)
julia> value.(x)
